@using System.Globalization;
@using TradingApp.Utility;
@using TradingApp.ViewModels;
@using static TradingApp.Utility.Constants;
@model PaginatedList<TradingApp.Models.Invoice>


@{
    ViewData["Title"] = "Invoice";
}

<h1>Invoice List</h1>

<p>
    <a asp-action="Create" asp-route-id="0">New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StakeholderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DocDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DueDate)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SubTotal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().TotalAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PaymentReconciliationStatus)
            </th>

          

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stakeholder.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocDate)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                <td>
                    @{
                        var statusDisplayName = EnumExtensions.GetEnumDisplayName<PaymentReconciliationStatus>(item.PaymentReconciliationStatus);
                    }
                    @Html.DisplayFor(modelItem => statusDisplayName)
                </td>

              

                <td>
                    <a asp-action="Create" asp-route-id="@item.Id">Edit ✐ </a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details 🖹</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete ❌</a>  |
                    <a asp-controller="Receipts" asp-action="Create" asp-route-invoiceId="@item.Id">Receipt 💰</a>
                </td>
               
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Previous</span>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                </li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next</span>
            </li>
        }
    </ul>
</nav>