@using System.Globalization;
@using TradingApp.Utility;
@using static TradingApp.Utility.Constants;
@model IEnumerable<TradingApp.Models.Invoice>

@{
    ViewData["Title"] = "Invoice";
}

<h1>Invoice List</h1>

<p>
    <a asp-action="Create" asp-route-id="0">New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StakeholderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DocDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubTotal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentReconciliationStatus)
            </th>

          

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stakeholder.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocDate)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                <td>
                    @{
                        var statusDisplayName = EnumExtensions.GetEnumDisplayName<PaymentReconciliationStatus>(item.PaymentReconciliationStatus);
                    }
                    @Html.DisplayFor(modelItem => statusDisplayName)
                </td>

              

                <td>
                    <a asp-action="Create" asp-route-id="@item.Id">Edit ✐ </a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details 🖹</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete ❌</a>  |
                    <a asp-controller="Receipts" asp-action="Create" asp-route-invoiceId="@item.Id">Receipt 💰</a>|
                    <a asp-controller="Receipts" asp-action="Create" asp-route-invoiceId="@item.Id">Invoice</a>
                </td>
               
            </tr>
        }
    </tbody>
</table>
